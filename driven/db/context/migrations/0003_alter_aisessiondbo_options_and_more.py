# Generated by Django 5.2.4 on 2025-09-30 20:14

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('context', '0002_remove_contextindexdbo_unique_project_file_path_and_more'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='aisessiondbo',
            options={'ordering': ['-session_start'], 'verbose_name': 'Sesión de IA', 'verbose_name_plural': 'Sesiones de IA'},
        ),
        migrations.AlterModelOptions(
            name='contextindexdbo',
            options={'ordering': ['-indexed_at'], 'verbose_name': 'Índice de Archivo', 'verbose_name_plural': 'Índices de Archivos'},
        ),
        migrations.AlterModelOptions(
            name='contextquerydbo',
            options={'ordering': ['-timestamp'], 'verbose_name': 'Consulta', 'verbose_name_plural': 'Consultas'},
        ),
        migrations.AlterModelOptions(
            name='contextresponsedbo',
            options={'ordering': ['-timestamp'], 'verbose_name': 'Respuesta', 'verbose_name_plural': 'Respuestas'},
        ),
        migrations.AlterModelOptions(
            name='contextsubscriptiondbo',
            options={'ordering': ['-created_at'], 'verbose_name': 'Suscripción', 'verbose_name_plural': 'Suscripciones'},
        ),
        migrations.AlterModelOptions(
            name='domaincontextdbo',
            options={'ordering': ['domain_type'], 'verbose_name': 'Dominio', 'verbose_name_plural': 'Dominios'},
        ),
        migrations.AlterModelOptions(
            name='projectcontextdbo',
            options={'ordering': ['-last_updated'], 'verbose_name': 'Proyecto', 'verbose_name_plural': 'Proyectos'},
        ),
        migrations.CreateModel(
            name='TechnicalDecisionDBO',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('decision_number', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('proposed', 'Propuesta'), ('accepted', 'Aceptada'), ('rejected', 'Rechazada'), ('deprecated', 'Deprecada'), ('superseded', 'Reemplazada')], default='proposed', max_length=20)),
                ('context', models.TextField(help_text='¿Qué circunstancias motivaron esta decisión?')),
                ('problem', models.TextField(help_text='¿Qué problema estamos resolviendo?')),
                ('decision', models.TextField(help_text='¿Qué decidimos hacer?')),
                ('rationale', models.TextField(help_text='¿Por qué elegimos esta opción?')),
                ('alternatives_considered', models.JSONField(blank=True, default=list, help_text='Alternativas que se consideraron')),
                ('consequences', models.TextField(blank=True, help_text='¿Qué implicaciones tiene esta decisión?')),
                ('decided_by', models.JSONField(blank=True, default=list, help_text='Quién tomó la decisión')),
                ('tags', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('decided_at', models.DateTimeField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='technical_decisions', to='context.projectcontextdbo')),
                ('related_decisions', models.ManyToManyField(blank=True, to='context.technicaldecisiondbo')),
                ('superseded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='supersedes', to='context.technicaldecisiondbo')),
            ],
            options={
                'verbose_name': 'Decisión Técnica (ADR)',
                'verbose_name_plural': 'Decisiones Técnicas (ADRs)',
                'db_table': 'ucl_technical_decisions',
                'ordering': ['-decision_number'],
            },
        ),
        migrations.CreateModel(
            name='ClientRequirementDBO',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('requirement_number', models.CharField(help_text='Ej: REQ-001, US-123', max_length=50)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('requirement_type', models.CharField(choices=[('feature', 'Feature'), ('bug', 'Bug'), ('enhancement', 'Enhancement'), ('task', 'Task'), ('epic', 'Epic')], max_length=20)),
                ('client_request', models.TextField(blank=True, help_text='Solicitud original del cliente')),
                ('business_value', models.TextField(blank=True, help_text='Valor de negocio esperado')),
                ('acceptance_criteria', models.JSONField(blank=True, default=list, help_text='Criterios de aceptación')),
                ('priority', models.CharField(choices=[('critical', 'Crítica'), ('high', 'Alta'), ('medium', 'Media'), ('low', 'Baja')], default='medium', max_length=20)),
                ('status', models.CharField(choices=[('backlog', 'Backlog'), ('analysis', 'En Análisis'), ('ready', 'Lista'), ('in_progress', 'En Progreso'), ('review', 'En Revisión'), ('testing', 'En Testing'), ('done', 'Completada'), ('blocked', 'Bloqueada'), ('cancelled', 'Cancelada')], default='backlog', max_length=20)),
                ('estimated_effort', models.CharField(blank=True, help_text='Ej: 3 días, 2 sprints', max_length=50)),
                ('assigned_to', models.JSONField(blank=True, default=list)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('attachments', models.JSONField(blank=True, default=list)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('blocked_by', models.ManyToManyField(blank=True, to='context.clientrequirementdbo')),
                ('domains', models.ManyToManyField(blank=True, related_name='requirements', to='context.domaincontextdbo')),
                ('parent_requirement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sub_requirements', to='context.clientrequirementdbo')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requirements', to='context.projectcontextdbo')),
                ('related_decisions', models.ManyToManyField(blank=True, to='context.technicaldecisiondbo')),
            ],
            options={
                'verbose_name': 'Requisito del Cliente',
                'verbose_name_plural': 'Requisitos del Cliente',
                'db_table': 'ucl_client_requirements',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BusinessKnowledgeDBO',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('knowledge_type', models.CharField(choices=[('business_rule', 'Regla de Negocio'), ('process', 'Proceso'), ('glossary', 'Glosario'), ('workflow', 'Flujo de Trabajo'), ('policy', 'Política'), ('calculation', 'Cálculo/Fórmula'), ('integration', 'Integración Externa'), ('constraint', 'Restricción'), ('other', 'Otro')], max_length=20)),
                ('description', models.TextField(help_text='Descripción detallada')),
                ('business_context', models.TextField(blank=True, help_text='Contexto de negocio relevante')),
                ('rules', models.JSONField(blank=True, default=list, help_text='Reglas específicas')),
                ('examples', models.JSONField(blank=True, default=list, help_text='Ejemplos de casos de uso')),
                ('edge_cases', models.JSONField(blank=True, default=list, help_text='Casos especiales o edge cases')),
                ('implementation_notes', models.TextField(blank=True, help_text='Notas sobre cómo está implementado')),
                ('code_references', models.JSONField(blank=True, default=list, help_text='Referencias a código que implementa esto')),
                ('stakeholders', models.JSONField(blank=True, default=list, help_text='Stakeholders relevantes')),
                ('tags', models.JSONField(blank=True, default=list)),
                ('source', models.CharField(blank=True, help_text='Fuente de esta información', max_length=255)),
                ('is_current', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_validated', models.DateTimeField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='business_knowledge', to='context.projectcontextdbo')),
                ('related_domains', models.ManyToManyField(blank=True, to='context.domaincontextdbo')),
                ('related_requirements', models.ManyToManyField(blank=True, to='context.clientrequirementdbo')),
            ],
            options={
                'verbose_name': 'Conocimiento de Negocio',
                'verbose_name_plural': 'Conocimientos de Negocio',
                'db_table': 'ucl_business_knowledge',
                'ordering': ['knowledge_type', 'title'],
                'indexes': [models.Index(fields=['project', 'knowledge_type'], name='ucl_busines_project_a3f8fc_idx'), models.Index(fields=['is_current'], name='ucl_busines_is_curr_53a54b_idx')],
            },
        ),
        migrations.CreateModel(
            name='ProjectConventionDBO',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('convention_type', models.CharField(choices=[('coding_style', 'Estilo de Código'), ('naming', 'Nomenclatura'), ('git_workflow', 'Workflow Git'), ('testing', 'Testing'), ('documentation', 'Documentación'), ('security', 'Seguridad'), ('performance', 'Performance'), ('deployment', 'Deployment'), ('code_review', 'Code Review'), ('other', 'Otro')], max_length=20)),
                ('enforcement_level', models.CharField(choices=[('required', 'Requerida'), ('recommended', 'Recomendada'), ('optional', 'Opcional')], default='recommended', max_length=20)),
                ('description', models.TextField(help_text='Descripción de la convención')),
                ('rationale', models.TextField(blank=True, help_text='Por qué seguimos esta convención')),
                ('examples_good', models.JSONField(blank=True, default=list, help_text='Ejemplos de código/uso correcto')),
                ('examples_bad', models.JSONField(blank=True, default=list, help_text='Ejemplos de qué NO hacer')),
                ('file_patterns', models.JSONField(blank=True, default=list, help_text='Patrones de archivos donde aplica (*.js, *.py, etc)')),
                ('automated_check', models.BooleanField(default=False)),
                ('tooling', models.JSONField(blank=True, default=dict, help_text='Herramientas que verifican esta convención (ESLint, Prettier, etc)')),
                ('tags', models.JSONField(blank=True, default=list)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('applies_to_domains', models.ManyToManyField(blank=True, to='context.domaincontextdbo')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conventions', to='context.projectcontextdbo')),
            ],
            options={
                'verbose_name': 'Convención del Proyecto',
                'verbose_name_plural': 'Convenciones del Proyecto',
                'db_table': 'ucl_project_conventions',
                'ordering': ['convention_type', 'title'],
                'indexes': [models.Index(fields=['project', 'convention_type'], name='ucl_project_project_037d89_idx'), models.Index(fields=['is_active'], name='ucl_project_is_acti_d7c22d_idx'), models.Index(fields=['enforcement_level'], name='ucl_project_enforce_075d89_idx')],
            },
        ),
        migrations.CreateModel(
            name='TeamDocumentationDBO',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('doc_type', models.CharField(choices=[('guide', 'Guía'), ('workflow', 'Workflow'), ('tutorial', 'Tutorial'), ('reference', 'Referencia'), ('runbook', 'Runbook'), ('onboarding', 'Onboarding'), ('api_doc', 'Documentación API'), ('architecture', 'Arquitectura'), ('other', 'Otro')], max_length=20)),
                ('slug', models.SlugField(max_length=255)),
                ('content', models.TextField(help_text='Markdown o texto enriquecido')),
                ('summary', models.TextField(blank=True, help_text='Resumen breve')),
                ('category', models.CharField(blank=True, max_length=100)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('version', models.CharField(default='1.0', max_length=50)),
                ('is_current', models.BooleanField(default=True)),
                ('authors', models.JSONField(blank=True, default=list)),
                ('reviewers', models.JSONField(blank=True, default=list)),
                ('external_url', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('last_reviewed', models.DateTimeField(blank=True, null=True)),
                ('previous_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next_versions', to='context.teamdocumentationdbo')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documentation', to='context.projectcontextdbo')),
                ('related_domains', models.ManyToManyField(blank=True, to='context.domaincontextdbo')),
            ],
            options={
                'verbose_name': 'Documentación del Equipo',
                'verbose_name_plural': 'Documentación del Equipo',
                'db_table': 'ucl_team_documentation',
                'ordering': ['-last_updated'],
                'indexes': [models.Index(fields=['project', 'doc_type'], name='ucl_team_do_project_89c253_idx'), models.Index(fields=['slug'], name='ucl_team_do_slug_6da9ed_idx'), models.Index(fields=['is_current'], name='ucl_team_do_is_curr_61d4f3_idx')],
                'unique_together': {('project', 'slug')},
            },
        ),
        migrations.AddIndex(
            model_name='technicaldecisiondbo',
            index=models.Index(fields=['project', 'status'], name='ucl_technic_project_385972_idx'),
        ),
        migrations.AddIndex(
            model_name='technicaldecisiondbo',
            index=models.Index(fields=['decision_number'], name='ucl_technic_decisio_852558_idx'),
        ),
        migrations.AddIndex(
            model_name='technicaldecisiondbo',
            index=models.Index(fields=['status'], name='ucl_technic_status_3690c2_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='technicaldecisiondbo',
            unique_together={('project', 'decision_number')},
        ),
        migrations.AddIndex(
            model_name='clientrequirementdbo',
            index=models.Index(fields=['project', 'status'], name='ucl_client__project_d988fa_idx'),
        ),
        migrations.AddIndex(
            model_name='clientrequirementdbo',
            index=models.Index(fields=['requirement_type', 'status'], name='ucl_client__require_3bcbb1_idx'),
        ),
        migrations.AddIndex(
            model_name='clientrequirementdbo',
            index=models.Index(fields=['priority'], name='ucl_client__priorit_97b083_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='clientrequirementdbo',
            unique_together={('project', 'requirement_number')},
        ),
    ]
